<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2011 SÃ¶ren Brunk.
This file is part of tFacet.

tFacet is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

tFacet is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with tFacet.  If not, see <http://www.gnu.org/licenses/>.
-->

<s:MXTreeItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  resize="mxtreeitemrenderer1_resizeHandler(event)"
					  >
	<s:states>
		<s:State name="normal" />            
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	<fx:Script>
		<![CDATA[
			import model.FacetManager;
			import model.facettree.FacetTreeNode;
			
			import mx.events.ResizeEvent;
			private var facetManager:FacetManager = FacetManager.getInstance();
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
//				labelField.width = container.width - 60;
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			protected function mxtreeitemrenderer1_resizeHandler(event:ResizeEvent):void
			{
				// TODO Auto-generated method stub
//				trace(event.oldWidth);
//				trace(width);
			}
			protected function showDetails_changeHandler(event:Event):void
			{
				facetManager.setFacetDetailsVisible(data as FacetTreeNode, showDetails.selected);
			}
			protected static function toolTipFunction(detailsVisible:Boolean):String
			{
				if (detailsVisible) {
					return "Hide Details";
				} else {
					return "Show Details";
				}
			}

		]]>
	</fx:Script>
	<s:HGroup id="container" left="0" right="44" verticalAlign="middle">
		<s:Rect id="indentationSpacer" width="{treeListData.indent}" percentHeight="100" alpha="0">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect>
		<s:Group id="disclosureGroup">
			<s:BitmapImage source="{treeListData.disclosureIcon}" visible="{treeListData.hasChildren}" />
		</s:Group>
		<s:BitmapImage source="{treeListData.icon}" />
		<s:Label id="labelField" text="{treeListData.label}" paddingTop="2"
				 lineBreak="toFit" />
	</s:HGroup>
	<s:ToggleButton
		id="showDetails"
		label=">>"
		right="2" width="40" height="16" fontSize="10"
		change="showDetails_changeHandler(event)"
		selected="{(data as FacetTreeNode).facetDetailsVisible}"
		toolTip="{toolTipFunction((data as FacetTreeNode).facetDetailsVisible)}"
		/>
</s:MXTreeItemRenderer>
